apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'

version = '1.1.0-SNAPSHOT'
group = 'com.jvoegele.gradle.plugins'

configurations {
    sshDeploy

    integrationTestCompile {
        extendsFrom testCompile
    }
    integrationTestRuntime {
        extendsFrom integrationTestCompile, testRuntime
    }
}

repositories {
    mavenCentral()
}

dependencies {
    sshDeploy 'org.apache.maven.wagon:wagon-ssh:1.0-beta-7'
}

uploadArchives {
    repositories.mavenDeployer {
        //configuration = configurations.sshDeploy
        //repository(url: "scp://jvoegele@chilco.textdrive.com/web/public/maven2")
        repository(url: "file:///tmp/maven2")
    }
}

dependencies {
    // Add all JAR files in the lib directory of theGradle installation directory
    // to the groovy configuration (is also used by compile configuration)
    groovy fileTree(dir: new File(gradle.gradleHomeDir, 'lib'), includes: ['**/*.jar'])
}

// Make sure all code is compiled, tested and checked before uploadArchives.
uploadArchives.dependsOn ':build'

sourceSets {
    integrationTest {
        groovy.srcDir file('src/integTest/groovy')
        resources.srcDir file('src/integTest/resources')
        compileClasspath = sourceSets.main.output + sourceSets.test.output + configurations.integrationTestCompile
        runtimeClasspath = output + compileClasspath + configurations.integrationTestRuntime
    }
}

task integrationTest(type: Test, dependsOn: jar) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    systemProperties['integTest.androidProjects'] = new File(sourceSets.integrationTest.output.resourcesDir, 'androidProjects').absolutePath

    doFirst {
        if (!System.getenv('ANDROID_HOME')) {
            throw new GradleException('ANDROID_HOME environment variable must be defined to run integration tests')
        }
    }
}

task developerBuild {
    dependsOn build, integrationTest
}

idea {
    module {
        downloadSources = true
        downloadJavadocs = true

        testSourceDirs += file('src/integTest/groovy')
        testSourceDirs += file('src/integTest/resources')
    }
    project {
        jdkName = '1.6'
        languageLevel = '1.6'
    }
}

clean << {
    //TODO: will this work on Windows? I intentionally used the file() method so as
    // to be platform independent, but I didn't test this outside MacOS/Linux
    def gradleCacheDir = file("${System.properties['user.home']}/.gradle/cache")
    def pluginCacheDir = file("$gradleCacheDir/$project.group/$project.name")
    logger.warn "Clearing Gradle artifact cache at $pluginCacheDir"
    ant.delete dir: pluginCacheDir
}
